name: CI Pipeline

on:
  push:
    branches:
      - '**'  # Trigger for pushes on any branch
  pull_request:
    branches:
      - production
      - develop

jobs:
  # Job 1: Build the application
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.build.outputs.image-tag }}  # Pass image tag to the push-image job

    steps:
      # Step 1: Checkout the repository (Updated to v3)
      - uses: actions/checkout@v3

      # Step 2: Get the current branch name
      - name: Get current branch name
        run: echo "Branch name is ${{ github.ref_name }}"

      # Step 3: Set up Node.js environment (Updated to v3)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      # Step 4: Install dependencies
      - run: npm install

      # Step 5: Build the application
      - run: npm run build

      # Step 6: Build Docker image
      - name: Build Docker image
        id: build
        run: |
          IMAGE_TAG=${GITHUB_SHA}
          docker build -t banking:${IMAGE_TAG} .
          echo "image-tag=${IMAGE_TAG}" >> $GITHUB_ENV  # Use Environment File instead of set-output
        outputs:
          image-tag: ${{ steps.build.outputs.image-tag }}

  # Job 2: Push Docker image
  push-image:
    runs-on: ubuntu-latest
    needs: build  # This ensures the 'build' job runs first
    # if: github.ref == 'refs/heads/production' || github.ref == 'refs/heads/develop'  # Push only for these branches

    steps:
      # Step 1: Checkout the repository (Updated to v3)
      - uses: actions/checkout@v3

      # Step 2: Set up Docker Buildx (for advanced builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3: Log in to Docker Hub (or another registry)
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username stored as GitHub secret
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password stored as GitHub secret

      # Step 4: Push the Docker image
      - name: Push Docker image
        run: |
          IMAGE_TAG=${{ needs.build.outputs.image-tag }}  # Retrieve the IMAGE_TAG from the build job
          docker tag banking:${IMAGE_TAG} phat99/banking:${IMAGE_TAG}
          docker push phat99/banking:${IMAGE_TAG}


